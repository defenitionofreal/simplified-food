version: '3'

services:
  backend:
    build: .
    container_name: food_backend
    command: bash entrypoint.sh
    volumes:
      - .:/food
      - ./static:/food/static
      - ./media:/food/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - pgdb
      - celery
      - redis
    links:
      - pgdb:pgdb


  celery:
    build: .
    container_name: food_celery
    command: celery -A project worker -l INFO
    volumes:
      - .:/food
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb

  celery_beat:
    build: .
    container_name: food_celery_beat
    command: celery -A project beat -l info
    env_file:
      - .env
    depends_on:
      - redis
      - pgdb
      - celery
    volumes:
      - .:/food

  pgdb:
    image: postgres
    container_name: food_pgdb
    env_file:
      - .env
    volumes:
      - food-pgdata:/var/lib/postgresql/data/
#    networks:
#      - djangonetwork

  pgadmin:
    container_name: food_pgadmin
    image: dpage/pgadmin4
    depends_on:
      - pgdb
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:80"
    volumes:
      - food-pgadmin-data:/var/lib/pgadmin
    links:
      - "pgdb:pgsql-server"

  flower:
    image: mher/flower:0.9.7
    command: [ 'flower', '--broker=redis://redis:6379', '--port=8888' ]
    ports:
      - 8888:8888
    depends_on:
      - redis

  redis:
    image: "redis:alpine"
    container_name: food_redis

  nginx:
    build: ./nginx
    container_name: food_nginx
    restart: on-failure
    ports:
      - 80:80
    volumes:
      - ./static:/static
      - ./media:/media
    depends_on:
      - backend

volumes:
  food-pgdata:
  food-pgadmin-data:

